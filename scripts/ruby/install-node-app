#!/usr/bin/env ruby

public

require 'optparse'
require 'open3'

begin
  require 'highline'
  require 'colored'
  require 'terminfo'
rescue LoadError => x
  puts <<-XXX
To run this utility:
  gem install 'highline'
  gem install 'colored'
  gem install 'ruby-terminfo'
XXX
  exit(1)
end

require File.expand_path('../', __FILE__) + "/includes/op-base.rb"

class InstallNodeApp < OpBase

  attr_accessor :opts_np_app

  def initialize
    
  end

  def go
    parse_opts

    prepare_kraken
    prepare_app
  end

  HELP = <<-BAN
  A ssh connect script for old platform websites
  Ex:
    prepare-node-app -a wb-user-service
  BAN

  def parse_opts
    self.option_parser = OptionParser.new do |opts|

      opts.banner = HELP

      opts.separator ""
      opts.separator "Specific options:"

      self.add_debug_option(opts)

      add_np_app_option(opts)

      add_help_option(opts)
    end
    self.option_parser.parse!(ARGV)

    if self.opts_np_app.nil? 
      exit_with_error("app parameter is required")
    end
  end

  def prepare_kraken
    unless Dir.exist?(path_kraken)
      checkout_app(name: 'kraken', path: path_wb_services)

      exec_bash_command "cd #{path_kraken} && npm install", message: "Installing kraken node modules"
    end
  end


  def prepare_app
    app_path = np_service_path(self.opts_np_app)
    unless Dir.exist?(app_path)
      checkout_app(name: self.opts_np_app, path: File.expand_path('../', app_path))
    end

    exec_command "cd #{app_path} && lrun bash -ic 'cd #{app_path} && nvm install && nvm ls && npm install && npm start'"
    
  end
end

InstallNodeApp.new.go
